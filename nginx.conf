events {
    # number of simultaneous connections each worker process can handle
    worker_connections 1024;
}

http {
    # create a shared memory zone named `my_zone` with a size of 10 megabytes to store information related to rate limiting
    # define rate limit to 5 request/minute for zone `my_zone`
    limit_req_zone $remote_addr zone=my_zone:10m rate=5r/m;

    # define rate limit to 1 request/minute for zone `my_zone_index`
    limit_req_zone $remote_addr zone=my_zone_index:10m rate=1r/m;

    # if hit rate limit, will return 429 Too Many Requests
    limit_req_status 429;

    # typically used to determine available ip and port
    # to be used in load balancing if multiple servers provided
    upstream fastapi-stream {
        # nginx know `fastapi-app` server because both
        # exist within the same Docker Network (check compose.yaml)
        server fastapi-app:8000;
    }

    server {
        listen 80;  # nginx on port 80

        # all endpoints will be reversed proxy to upstream fastapi
        # and implement rate limit `my_zone`
        location / {
            proxy_pass http://fastapi-stream;
            limit_req zone=my_zone burst=10 nodelay;
        }

        # specific for endpoint '/'
        # will be reversed proxy to upstream fastapi
        # implement rate limit from `my_zone_index`
        location = / {
            proxy_pass http://fastapi-stream;
            limit_req zone=my_zone_index nodelay;
        }
    }
}
